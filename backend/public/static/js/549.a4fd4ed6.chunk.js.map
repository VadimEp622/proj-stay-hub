{"version":3,"file":"static/js/549.a4fd4ed6.chunk.js","mappings":"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","sources":["cmps/stay-index/stay-list/stay-preview/preview-image-carousel.jsx","cmps/stay-index/stay-list/stay-preview.jsx","cmps/stay-index/stay-list.jsx","customHooks/useGeoLocation.js","pages/user-wishlist.jsx"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport Carousel from 'react-multi-carousel'\r\nimport 'react-multi-carousel/lib/styles.css'\r\nimport { ARROW_LEFT, ARROW_RIGHT } from '../../../../services/svg.service.js'\r\nimport SvgHandler from '../../../_reuseable-cmps/svg-handler.jsx'\r\n\r\n\r\nexport function PreviewImageCarousel({ imgs, stay }) {\r\n\r\n    const CustomLeftArrow = ({ onClick }) => (\r\n        <button className='custom-arrow left' onClick={onClick} >\r\n            <SvgHandler svgName={ARROW_LEFT} />\r\n        </button >\r\n    )\r\n\r\n    const CustomRightArrow = ({ onClick }) => (\r\n        <button className='custom-arrow right' onClick={onClick}  >\r\n            <SvgHandler svgName={ARROW_RIGHT} />\r\n        </button >\r\n    )\r\n\r\n    const responsive = {\r\n        desktop: {\r\n            breakpoint: {\r\n                max: 3000,\r\n                min: 1024\r\n            },\r\n            items: 1,\r\n        },\r\n        tablet: {\r\n            breakpoint: {\r\n                max: 1024,\r\n                min: 464\r\n            },\r\n            items: 1,\r\n        },\r\n        mobile: {\r\n            breakpoint: {\r\n                max: 464,\r\n                min: 0\r\n            },\r\n            items: 1,\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Carousel\r\n            additionalTransfrom={0}\r\n            arrows={true}\r\n            centerMode={false}\r\n            className='preview-image-carousel'\r\n            customLeftArrow={<CustomLeftArrow />}\r\n            customRightArrow={<CustomRightArrow />}\r\n            customTransition='transform 300ms ease-in-out'\r\n            dotListClass='dot-container'\r\n            draggable={false}\r\n            focusOnSelect={false}\r\n            infinite={false}\r\n            itemClass=''\r\n            minimumTouchDrag={80}\r\n            // removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n            renderArrowsWhenDisabled={false}\r\n            renderButtonGroupOutside={false}\r\n            renderDotsOutside={false}\r\n            responsive={responsive}\r\n            rtl={false}\r\n            showDots={true}\r\n            sliderClass=''\r\n            slidesToSlide={1}\r\n            swipeable={true}\r\n        >\r\n            {\r\n                imgs.map((img, index) =>\r\n                    <Link key={index} to={`/stay/${stay._id}`}>\r\n                        <img\r\n                            src={img}\r\n                            alt={`stay-pic-${index}`}\r\n                        />\r\n                    </Link>\r\n                )\r\n            }\r\n        </Carousel>\r\n    )\r\n}\r\n","// Node modules\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Services\r\nimport { stayService } from '../../../services/stay.service'\r\nimport { utilService } from '../../../services/util.service.js'\r\nimport { HEART_24_WHITE_STROKE, HEART_24_WHITE_STROKE_RED_FILL, STAR_12 } from '../../../services/svg.service.js'\r\n\r\n// Components\r\nimport { PreviewImageCarousel } from './stay-preview/preview-image-carousel.jsx'\r\nimport SvgHandler from '../../_reuseable-cmps/svg-handler.jsx'\r\n\r\n\r\n// **TODO: stay-preview should be a dumb component(!!!), that only display data, and not calculate inside it with functions(!!!)\r\n\r\nexport function StayPreview({ stay, geoLocation, isMobile, lastStayElementRef = null, isStayWishlist, onLikeClicked }) {\r\n    // function getResizeMobilePictures() {\r\n    // if (!isMobile) return stay.imgUrls\r\n\r\n    // const stayImages = stay.imgUrls.map((imgStr) => {\r\n    //     const strIdx = imgStr.indexOf('/upload/') + 8\r\n    //     const firstPart = imgStr.substring(0, strIdx)\r\n    //     const middlePart = 'c_fit,w_500/'\r\n    //     const lastPart = imgStr.substring(strIdx)\r\n    //     return firstPart + middlePart + lastPart\r\n    // })\r\n\r\n    // return stayImages\r\n    // }\r\n\r\n\r\n    function calcCrow(lat1, lon1, lat2, lon2) {\r\n        const R = 6371 // km\r\n        const dLat = toRad(lat2 - lat1)\r\n        const dLon = toRad(lon2 - lon1)\r\n        lat1 = toRad(lat1)\r\n        lat2 = toRad(lat2)\r\n\r\n        const a =\r\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n            Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2)\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\r\n        const d = R * c\r\n        return utilService.addCommas(d)\r\n    }\r\n\r\n    // Converts numeric degrees to radians\r\n    function toRad(Value) {\r\n        return Value * Math.PI / 180\r\n    }\r\n\r\n    function getDistance() {\r\n        const distance = calcCrow(geoLocation.coordinates.lat, geoLocation.coordinates.lng, stay.loc.lat, stay.loc.lan)\r\n        return `${distance} kilometers away`\r\n    }\r\n\r\n    // TODO: make it so that if user filtered by dates, don't display range for dates before those filtered dates,\r\n    //   in stay-preview\r\n    const dateRange = utilService.getStayPreviewDateRange(\r\n        stay.availableDates[0].daysFromToday,\r\n        stay.availableDates[0].until\r\n    )\r\n\r\n    const stayScore = stayService.getStayScore(stay.reviews)\r\n\r\n    return (\r\n        <section className='stay-preview' key={stay._id} ref={lastStayElementRef}>\r\n            <PreviewImageCarousel imgs={stay.imgUrls} stay={stay} />\r\n\r\n            <section className='heart-svg' onClick={(ev) => onLikeClicked(ev, stay._id)}>\r\n                <SvgHandler svgName={isStayWishlist(stay._id) ? HEART_24_WHITE_STROKE_RED_FILL : HEART_24_WHITE_STROKE} />\r\n            </section>\r\n\r\n            <Link to={`/stay/${stay._id}`}>\r\n                <section className='preview-info fs15'>\r\n\r\n                    <section className='preview-header flex space-between align-center'>\r\n                        <p className='ff-circular-semibold lh19'>{stay.loc.city}, {stay.loc.country}</p>\r\n                        <p className='review-score flex align-baseline lh19'>\r\n                            <SvgHandler svgName={STAR_12} />\r\n                            <span className='lh19'>{stayScore}</span>\r\n                        </p>\r\n                    </section>\r\n\r\n                    <p className='type-or-distance lh19'>\r\n                        {\r\n                            geoLocation.loaded && geoLocation?.coordinates\r\n                                ? getDistance()\r\n                                : stay.type || 'Other'\r\n                        }\r\n                    </p>\r\n\r\n                    <p className='date-range lh19'>{dateRange}</p>\r\n\r\n                    <p className='price-preview lh19'>\r\n                        <span className='ff-circular-semibold'>{`$${utilService.addCommas(stay.price)} `}</span>\r\n                        night\r\n                    </p>\r\n\r\n                </section>\r\n            </Link>\r\n        </section>\r\n    )\r\n}","// Store\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks'\r\nimport { toggleWishlistStay } from '../../store/wishlist-stay.slice'\r\nimport { systemSetAppModal } from '../../store/systemSlice'\r\n\r\n// Custom hooks\r\nimport useIsMobile from '../../customHooks/useIsMobile.js'\r\n\r\n// Services\r\nimport { SET_APP_MODAL_LOGIN } from '../../services/resources-strings.service'\r\n\r\n// Components\r\nimport { StayPreview } from './stay-list/stay-preview.jsx'\r\nimport { Loader } from '../_reuseable-cmps/loader.jsx'\r\n\r\n\r\n// TODO: improve stay-list cmp structure + styling\r\n\r\nexport function StayList({ stays, geoLocation, lastStayElementRef = null, isStayWishlist }) {\r\n    const loggedInUser = useAppSelector(storeState => storeState.userModule.user)\r\n    // const wishlistIds = useAppSelector(storeState => storeState.stayModule.wishlistIds)\r\n    const isLoading = useAppSelector(storeState => storeState.systemModule.isLoading)\r\n    const isMobile = useIsMobile()\r\n    const dispatch = useAppDispatch()\r\n\r\n    // function isStayWishlist(stayId) {\r\n    //     return loggedInUser ? wishlistIds.some(wishlistId => wishlistId === stayId) : false\r\n    // }\r\n\r\n    function onLikeClicked(ev, stayId) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        if (!loggedInUser) {\r\n            dispatch(systemSetAppModal(SET_APP_MODAL_LOGIN))\r\n            return\r\n        }\r\n        dispatch(toggleWishlistStay({ stayId }))\r\n    }\r\n\r\n    if (isLoading) return <Loader />\r\n    return (\r\n        <section className='stay-list'>\r\n            {stays.length < 1 && <span>No Stays Available</span>}\r\n            {stays.map((stay, index) =>\r\n                <StayPreview key={stay._id} stay={stay} geoLocation={geoLocation} isMobile={isMobile}\r\n                    isStayWishlist={isStayWishlist} onLikeClicked={onLikeClicked}\r\n                    lastStayElementRef={(lastStayElementRef && stays.length === index + 1) ? lastStayElementRef : null}\r\n                />\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\n\r\n/**\r\n * @typedef {Object} Coordinates\r\n * @property {string} lat - The latitude.\r\n * @property {string} lng - The longitude.\r\n * \r\n * @typedef {Object} Error\r\n * @property {number} code - Error Type Code\r\n * @property {string} message - Error description\r\n * \r\n * @typedef {Object} Location\r\n * @property {boolean} loaded - Is geolocation loaded\r\n * @property {Coordinates} [coordinates] - geolocation coordinates object\r\n * @property {Error} [error] - Error object, if any error occurs\r\n */\r\n\r\n\r\n/**\r\n * @function\r\n * @returns {Location} - The location object. If geolocation is available and loaded, \r\n * the `coordinates` property will contain the latitude and longitude. If an error occurs \r\n * while trying to fetch the geolocation, the `error` property will contain the error code \r\n * and message.\r\n */\r\n\r\n\r\nexport default function useGeoLocation() {\r\n    const [location, setLocation] = useState({\r\n        loaded: false,\r\n        coordinates: { lat: '', lng: '' },\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!('geolocation' in navigator)) {\r\n            onError({\r\n                code: 0,\r\n                message: 'Geolocation not supported',\r\n            })\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(onSuccess, onError)\r\n    }, [])\r\n\r\n\r\n    function onSuccess(location) {\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude,\r\n            },\r\n        })\r\n    }\r\n\r\n    function onError(error) {\r\n        setLocation({\r\n            loaded: true,\r\n            error: {\r\n                code: error.code,\r\n                message: error.message,\r\n            },\r\n        })\r\n    }\r\n\r\n    return location\r\n}","// Node modules\r\nimport { useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n// Custom hooks\r\nimport useGeoLocation from '../customHooks/useGeoLocation.js'\r\n\r\n// Store\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks'\r\n\r\n// Components\r\nimport { StayList } from '../cmps/stay-index/stay-list.jsx'\r\nimport { Loader } from '../cmps/_reuseable-cmps/loader.jsx'\r\nimport { loadWishlistStays, wishlistStayUpdateReqStatusLoadStays } from '../store/wishlist-stay.slice'\r\n\r\n\r\n/**\r\n * Output of useGeoLocation() func\r\n * \r\n * @typedef {Object} Location\r\n * @property {boolean} loaded - Is geolocation loaded\r\n * @property {Coordinates} [coordinates] - geolocation coordinates object\r\n * @property {Error} [error] - Error object, if any error occurs\r\n * \r\n * @typedef {Object} Coordinates\r\n * @property {string} lat - The latitude.\r\n * @property {string} lng - The longitude.\r\n * \r\n * @typedef {Object} Error\r\n * @property {number} code - Error Type Code\r\n * @property {string} message - Error description\r\n */\r\n\r\n\r\n// TODO-priority-LOW: when navigating to a path which requires logging in, consider rerouting to a special login page(?)\r\n\r\nexport function UserWishlist() {\r\n    const loggedinUser = useAppSelector(storeState => storeState.userModule.user)\r\n    const wishlistStays = useAppSelector(storeState => storeState.wishlistStayModule.stays)\r\n    const reqStatusLoadStays = useAppSelector(storeState => storeState.wishlistStayModule.reqStatusLoadStays)\r\n\r\n    /** @type {Location} */\r\n    const geoLocation = useGeoLocation()\r\n    const navigate = useNavigate()\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(wishlistStayUpdateReqStatusLoadStays(\"idle\"))\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!loggedinUser) navigate('/')\r\n    }, [loggedinUser, navigate])\r\n\r\n    useEffect(() => {\r\n        if (reqStatusLoadStays === \"idle\") dispatch(loadWishlistStays())\r\n    }, [reqStatusLoadStays, dispatch])\r\n\r\n\r\n    function isStayWishlist(stayId) {\r\n        return loggedinUser ? wishlistStays.some(wishlistStay => wishlistStay._id === stayId) : false\r\n    }\r\n\r\n\r\n    if (!loggedinUser || reqStatusLoadStays === \"idle\" || reqStatusLoadStays === \"loading\") return <Loader />\r\n    if (reqStatusLoadStays === \"failed\") return <h1>Failed to load wishlist</h1>\r\n\r\n    return (\r\n        <section className='user-wishlist-page'>\r\n            <h1 className='ff-circular-semibold fs28 lh28'>Wishlist</h1>\r\n            {(wishlistStays.length === 0)\r\n                ? (\r\n                    <section className='empty-wishlist'>\r\n                        <h3 className='fs22'>No places saved yet</h3>\r\n                        <p className='no-wishlist'>As you explore, click the heart icon to save your favorite places and experiences to a wishlist.</p>\r\n                        <Link to={`/`}>\r\n                            <button className='explore fs16 lh20'>Start exploring</button>\r\n                        </Link>\r\n                    </section>\r\n                )\r\n                : <StayList stays={wishlistStays} geoLocation={geoLocation} isStayWishlist={isStayWishlist} />\r\n            }\r\n        </section>\r\n    )\r\n}"],"names":["PreviewImageCarousel","imgs","stay","CustomLeftArrow","onClick","className","svgName","ARROW_LEFT","CustomRightArrow","ARROW_RIGHT","additionalTransfrom","arrows","centerMode","customLeftArrow","customRightArrow","customTransition","dotListClass","draggable","focusOnSelect","infinite","itemClass","minimumTouchDrag","renderArrowsWhenDisabled","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","tablet","mobile","rtl","showDots","sliderClass","slidesToSlide","swipeable","map","img","index","to","_id","src","alt","StayPreview","geoLocation","isMobile","lastStayElementRef","isStayWishlist","onLikeClicked","toRad","Value","Math","PI","dateRange","utilService","availableDates","daysFromToday","until","stayScore","stayService","reviews","ref","imgUrls","ev","HEART_24_WHITE_STROKE_RED_FILL","HEART_24_WHITE_STROKE","loc","city","country","STAR_12","loaded","coordinates","distance","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","d","atan2","sqrt","calcCrow","lat","lng","lan","getDistance","type","price","StayList","stays","loggedInUser","useAppSelector","storeState","userModule","user","isLoading","systemModule","useIsMobile","dispatch","useAppDispatch","stayId","preventDefault","stopPropagation","toggleWishlistStay","systemSetAppModal","SET_APP_MODAL_LOGIN","length","useGeoLocation","useState","location","setLocation","onSuccess","coords","latitude","longitude","onError","error","code","message","useEffect","navigator","geolocation","getCurrentPosition","UserWishlist","loggedinUser","wishlistStays","wishlistStayModule","reqStatusLoadStays","navigate","useNavigate","wishlistStayUpdateReqStatusLoadStays","loadWishlistStays","some","wishlistStay"],"sourceRoot":""}