{"version":3,"file":"static/js/26.36739a41.chunk.js","mappings":"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","sources":["store/order.actions.js","cmps/user-dashboard/order-list/order-preview.jsx","cmps/user-dashboard/order-list.jsx","cmps/user-dashboard/dashboard-statistics/chart-bar.jsx","cmps/user-dashboard/dashboard-statistics/chart-line.jsx","cmps/user-dashboard/dashboard-statistics.jsx","pages/user-dashboard.jsx"],"sourcesContent":["// Store\r\nimport { store } from \"./store.js\"\r\nimport {\r\n    APPROVE_ORDER, REJECT_ORDER, SET_ORDERS, LOADING_ORDERS_END, LOADING_ORDERS_START\r\n} from \"./order.reducer.js\"\r\n\r\n// Services\r\nimport { orderService } from \"../services/order.service.js\"\r\nimport { showErrorMsg } from \"../services/event-bus.service.js\"\r\n\r\n\r\n// ======================= Confirmed Is Being Used =======================\r\nexport async function loadOrders() {\r\n    try {\r\n        store.dispatch({ type: LOADING_ORDERS_START })\r\n        const orders = await orderService.getOrders()\r\n        store.dispatch({ type: SET_ORDERS, orders })\r\n    } catch (err) {\r\n        console.log('error - could not get orders', err)\r\n        showErrorMsg('Could not load orders')\r\n    } finally {\r\n        store.dispatch({ type: LOADING_ORDERS_END })\r\n    }\r\n}\r\n\r\nexport async function approveOrder(orderId) {\r\n    try {\r\n        store.dispatch({ type: APPROVE_ORDER, orderId })\r\n        await orderService.updateOrderStatus({ status: 'Approved', _id: orderId })\r\n    } catch (err) {\r\n        console.log('error - could not approve order', err)\r\n        showErrorMsg('Could not update order')\r\n    }\r\n}\r\n\r\nexport async function rejectOrder(orderId) {\r\n    try {\r\n        store.dispatch({ type: REJECT_ORDER, orderId })\r\n        await orderService.updateOrderStatus({ status: 'Rejected', _id: orderId })\r\n    } catch (err) {\r\n        console.log('error - could not reject order', err)\r\n        showErrorMsg('Could not update order')\r\n    }\r\n}\r\n// =======================================================================\r\n\r\n\r\n\r\n","// Services\r\nimport { utilService } from '../../../services/util.service.js'\r\n\r\n\r\nexport function OrderPreview({ order, onApprove, onReject }) {\r\n\r\n    const orderStatus = order.content.status\r\n    const buyerPic = order.content.buyer.img\r\n    const buyerName = order.content.buyer.fullname\r\n    const buyerJoinDate = order.content.buyer.joined\r\n    const { checkIn, checkOut } = order.content.orderDetails\r\n    const timeRange = utilService.getFormattedTimeRange(checkIn, checkOut)\r\n    return (\r\n        <tr className='flex'>\r\n            <td className='guest-column'>\r\n                <section className='order-guest flex align-center'>\r\n                    <img src={buyerPic} alt='guest' />\r\n\r\n                    <article className='name-and-join-date flex column'>\r\n                        <span className='full-name'> {buyerName}</span>\r\n                        <span className='join-date fs12'>Joined in {buyerJoinDate}</span>\r\n                    </article>\r\n                </section>\r\n            </td>\r\n\r\n            <td className='date-column'>\r\n                <span className='order-dates flex align-center'>{timeRange}</span>\r\n            </td>\r\n\r\n            <td className='action-column'>\r\n                <section className='order-actions flex align-center'>\r\n                    {orderStatus === 'Pending' ? (\r\n                        <article className='actions flex column justify-center'>\r\n                            <button className='action-button approve' onClick={(ev) => onApprove(ev, order._id)}>\r\n                                Approve\r\n                            </button>\r\n\r\n                            <button className='action-button reject' onClick={(ev) => onReject(ev, order._id)}>\r\n                                Reject\r\n                            </button>\r\n                        </article>\r\n                    ) : (\r\n                        <article className={`order-status ${orderStatus.toLowerCase()} fs14`} >\r\n                            {orderStatus}\r\n                        </article>\r\n                    )}\r\n                </section>\r\n            </td>\r\n        </tr>\r\n    )\r\n}","// Node modules\r\nimport { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\n// Store\r\nimport { store } from '../../store/store.js'\r\nimport { approveOrder, rejectOrder, loadOrders } from '../../store/order.actions.js'\r\nimport { LOADING_ORDERS_END } from '../../store/order.reducer.js'\r\n\r\n// Services\r\nimport { orderService } from '../../services/order.service.js'\r\n\r\n// Components\r\nimport { OrderPreview } from './order-list/order-preview.jsx'\r\nimport { Loader } from '../_reuseable-cmps/loader.jsx'\r\n\r\n\r\n// TODO: make tabs, for displaying:\r\n//   1. ALL ORDERS of ALL users\r\n//   2. Only orders made by CURRENT LOGGED IN USER\r\n//   3. Example of orders, or demo data\r\n// TODO: consider whether it's really needed to put the orders into the store, and not use useState\r\n\r\n\r\nexport function OrderList({ loggedInUser }) {\r\n  const isLoadingOrders = useSelector(storeState => storeState.orderModule.isLoadingOrders)\r\n  const allOrders = useSelector(storeState => storeState.orderModule.orders)\r\n  const [demoOrders, setDemoOrders] = useState(orderService.getDemoOrders())\r\n\r\n\r\n  useEffect(() => {\r\n    loadOrders()\r\n    return () => {\r\n      store.dispatch({ type: LOADING_ORDERS_END })\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('allOrders', allOrders)\r\n  }, [allOrders])\r\n\r\n\r\n  // DEMO DATA //\r\n  function handleApproveDemoData(orderId) {\r\n    const updatedDemoOrders = demoOrders.map(order => (order._id === orderId)\r\n      ? { ...order, content: { ...order.content, status: 'Approved' } }\r\n      : order\r\n    )\r\n    setDemoOrders(updatedDemoOrders)\r\n  }\r\n  function handleRejectDemoData(orderId) {\r\n    const updatedDemoOrders = demoOrders.map(order => (order._id === orderId)\r\n      ? { ...order, content: { ...order.content, status: 'Rejected' } }\r\n      : order\r\n    )\r\n    setDemoOrders(updatedDemoOrders)\r\n  }\r\n  ///////////////\r\n\r\n\r\n  function onApprove(ev, orderId, isDemoData = false) {\r\n    ev.preventDefault()\r\n    ev.stopPropagation()\r\n    if (!isDemoData) approveOrder(orderId)\r\n    else handleApproveDemoData(orderId)\r\n  }\r\n\r\n  function onReject(ev, orderId, isDemoData = false) {\r\n    ev.preventDefault()\r\n    ev.stopPropagation()\r\n    if (!isDemoData) rejectOrder(orderId)\r\n    else handleRejectDemoData(orderId)\r\n  }\r\n\r\n\r\n  if (isLoadingOrders) return <Loader />\r\n  return (\r\n    <section className=\"order-list\">\r\n      <table>\r\n\r\n        <thead>\r\n          <tr className=\"flex\">\r\n            <th className=\"guest-column\">Guest</th>\r\n            <th className=\"date-column\">Dates</th>\r\n            <th className=\"action-column\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {allOrders.map(order => (\r\n            <OrderPreview\r\n              key={order._id}\r\n              order={order}\r\n              onApprove={onApprove}\r\n              onReject={onReject}\r\n            />\r\n          ))}\r\n          {\r\n            allOrders.length === 0 &&\r\n            demoOrders.map(order => (\r\n              <OrderPreview\r\n                key={order._id}\r\n                order={order}\r\n                onApprove={(ev, orderId) => onApprove(ev, orderId, true)}\r\n                onReject={(ev, orderId) => onReject(ev, orderId, true)}\r\n              />\r\n            ))\r\n          }\r\n        </tbody>\r\n\r\n      </table>\r\n    </section >\r\n  )\r\n}\r\n","// Node modules\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js'\r\n\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\r\n\r\n\r\nexport function ChartBar({ dashboardData }) {\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Revenue overview',\r\n            },\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n                ticks: {\r\n                    callback: function (value) {\r\n                        return '$' + value\r\n                    },\r\n                },\r\n            },\r\n            x: {\r\n                grid: {\r\n                    display: false, // Hide the background lines for the x-axis\r\n                },\r\n            },\r\n        },\r\n    }\r\n\r\n    const data = {\r\n        labels: dashboardData.labels,\r\n        datasets: [\r\n            {\r\n                label: 'Revenue generated per month',\r\n                data: dashboardData.revenue,\r\n                backgroundColor: [\r\n                    'rgba(54, 162, 235, 0.5)',\r\n                    'rgba(255, 206, 86, 0.5)',\r\n                    'rgba(75, 192, 192, 0.5)',\r\n                    'rgba(153, 102, 255, 0.5)',\r\n                    'rgba(255, 159, 64, 0.5)',\r\n                    'rgba(128, 0, 128, 0.5)',\r\n                ],\r\n            },\r\n        ],\r\n    }\r\n    return (\r\n        <section className='chart-container flex justify-center'>\r\n            <Bar options={options} data={data} />\r\n        </section>\r\n    )\r\n}","// Node modules\r\nimport React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport {\r\n    Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend,\r\n} from 'chart.js'\r\n\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend)\r\n\r\n\r\nexport function ChartLine({ dashboardData }) {\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Occupancy rate',\r\n            },\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n            },\r\n            x: {\r\n                grid: {\r\n                    display: false, // Hide the background lines for the x-axis\r\n                },\r\n            },\r\n            y: {\r\n                grid: {\r\n                    display: true, // Hide the background lines for the y-axis\r\n                },\r\n            },\r\n        },\r\n    }\r\n\r\n    const data = {\r\n        labels: dashboardData.labels,\r\n        datasets: [\r\n            {\r\n                label: 'Occupancy',\r\n                data: dashboardData.occupancyRate,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            },\r\n        ],\r\n    }\r\n\r\n    return (\r\n        <section className='chart-container flex justify-center'>\r\n            <Line options={options} data={data} />\r\n        </section>\r\n    )\r\n}\r\n","import { ChartBar } from \"./dashboard-statistics/chart-bar.jsx\"\r\nimport { ChartLine } from \"./dashboard-statistics/chart-line.jsx\"\r\n\r\nexport function DashboardStatistics({ dashboardData }) {\r\n\r\n\r\n    function getAverageRevenue() {\r\n        const sum = dashboardData.revenue.reduce((sum, value) => sum + value, 0)\r\n        const average = sum / dashboardData.revenue.length\r\n        return average.toLocaleString(undefined, { maximumFractionDigits: 2 })\r\n    }\r\n\r\n    const averageRevenue = getAverageRevenue()\r\n    return (\r\n        <section className=\"dashboard-statistics\">\r\n\r\n            <article className=\"statistics-revenue\">\r\n                <h2 className=\"statistics-header\">Total revenue</h2>\r\n                <section className=\"statistics-body\">\r\n                    <article className=\"flex space-between\">\r\n                        <h3>Revenue:</h3>\r\n                        <h3>${averageRevenue}</h3>\r\n                    </article>\r\n                    <article className=\"flex space-between\">\r\n                        <h3>Occupancy:</h3>\r\n                        <h3>{61.83}%</h3>\r\n                    </article>\r\n                </section>\r\n            </article>\r\n            <article className=\"statistics-chart-bar\">\r\n                <h2 className=\"statistics-header\">Revenue per month</h2>\r\n                <ChartBar dashboardData={dashboardData} />\r\n            </article>\r\n            <article className=\"statistics-chart-line\">\r\n                <h2 className=\"statistics-header\">Occupancy rate</h2>\r\n                <ChartLine dashboardData={dashboardData} />\r\n            </article>\r\n\r\n        </section>\r\n    )\r\n}","// Node modules\r\nimport { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n// Services\r\nimport { userService } from '../services/user.service.js'\r\nimport { showErrorMsg } from '../services/event-bus.service.js'\r\n\r\n// Components\r\nimport { OrderList } from '../cmps/user-dashboard/order-list.jsx'\r\nimport { DashboardStatistics } from '../cmps/user-dashboard/dashboard-statistics.jsx'\r\n\r\n\r\nexport function UserDashboard() {\r\n    const loggedInUser = useSelector(storeState => storeState.userModule.user)\r\n    const navigate = useNavigate()\r\n    const dashboardData = userService.getUserDashboardData()\r\n\r\n\r\n    useEffect(() => {\r\n        if (!loggedInUser) {\r\n            showErrorMsg('You must be logged in to view your listings')\r\n            navigate('/')\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loggedInUser])\r\n\r\n\r\n    return (\r\n        <section className='dashboard-page'>\r\n            <h1 className='dashboard-page-title fs30'>My Dashboard</h1>\r\n            <DashboardStatistics dashboardData={dashboardData} />\r\n            <OrderList loggedInUser={loggedInUser} />\r\n        </section>\r\n    )\r\n}\r\n"],"names":["store","type","LOADING_ORDERS_START","orderService","orders","SET_ORDERS","console","log","showErrorMsg","LOADING_ORDERS_END","approveOrder","orderId","APPROVE_ORDER","status","_id","rejectOrder","REJECT_ORDER","OrderPreview","order","onApprove","onReject","orderStatus","content","buyerPic","buyer","img","buyerName","fullname","buyerJoinDate","joined","orderDetails","checkIn","checkOut","timeRange","utilService","className","src","alt","onClick","ev","toLowerCase","OrderList","loggedInUser","isLoadingOrders","useSelector","storeState","orderModule","allOrders","useState","demoOrders","setDemoOrders","handleApproveDemoData","updatedDemoOrders","map","handleRejectDemoData","isDemoData","preventDefault","stopPropagation","useEffect","loadOrders","length","ChartBar","dashboardData","data","labels","datasets","label","revenue","backgroundColor","options","responsive","plugins","legend","display","title","text","scales","y","beginAtZero","ticks","callback","value","x","grid","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ChartLine","occupancyRate","borderColor","DashboardStatistics","averageRevenue","reduce","sum","toLocaleString","undefined","maximumFractionDigits","UserDashboard","userModule","user","navigate","useNavigate","userService","PointElement","LineElement"],"sourceRoot":""}